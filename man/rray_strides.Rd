% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strides.R
\name{rray_strides}
\alias{rray_strides}
\title{Strides}
\usage{
rray_strides(x)
}
\arguments{
\item{x}{A vector}
}
\description{
\code{rray_strides()} computes the \emph{strides} of an array.

Strides represent the distance between elements of a particular axis. They
are computed from the dimensions of the array by:
\itemize{
\item Appending a \code{1L} to the front of the dimensions
\item Dropping the last dimension
\item Computing the cumulative product of the result
}

Strides are used internally for broadcasting and help transition from
\emph{shaped} locations to \emph{flat} locations. For example, given a \verb{(3, 2, 3)}
array, a shaped location of \verb{[2, 1, 3]} would correspond to a flat location
of \code{14}, which could be used to index a 1D version of the array.
}
\section{Invariants}{

\itemize{
\item \code{vec_size(rray_strides(x)) == vec_size(rray_dims(x))}
\item \code{rray_strides(x) == cumprod(c(1L, rray_dims(x)[-length(rray_dims(x))]))}
}
}

\examples{
rray_strides(1:5)
rray_strides(array(1, dim = c(2, 2, 2)))


x <- array(1:18, dim = c(3, 2, 3))
x_flat <- as.vector(x)

# Look along the second axis
as.vector(x[, 1, , drop = FALSE])

# We can use the strides to transform shaped locations to
# flat locations that we can index `x_flat` with to extract
# the first column. This algorithm only works if the
# shaped locations are 0-based, and it returns a 0-based location.
axis1 <- c(0, 1, 2, 0, 1, 2, 0, 1, 2)
axis2 <- c(0, 0, 0, 0, 0, 0, 0, 0, 0)
axis3 <- c(0, 0, 0, 1, 1, 1, 2, 2, 2)
strides <- rray_strides(x)

locs <- axis1 * strides[[1]] +
        axis2 * strides[[2]] +
        axis3 * strides[[3]]

x_flat[locs + 1]
}
